"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[898],{30612:e=>{e.exports=JSON.parse('{"functions":[{"name":"schedule","desc":"Creates a new schedule that can be used to create jobs. Optionally takes in a `before` and `after` callback that will be called before and after each job is executed.","params":[{"name":"parameters","desc":"","lua_type":"{\\r\\n\\tbefore: (Job, ...any) -> ()?,\\r\\n\\tafter: (Job, ...any) -> ()?,\\r\\n}?"}],"returns":[{"desc":"","lua_type":"Schedule"}],"function_type":"static","source":{"line":41,"path":"src/init.lua"}},{"name":"interval","desc":"Creates a new thread that will execute a callback every given number of seconds. If the callback returns a non-nil value, the thread will stop executing.\\n\\n```lua\\n-- Run this every 300 seconds\\nlocal gameThread = Sandwich.interval(300, function()\\n\\tprint \'A special boss has appeared!\'\\nend)\\n```","params":[{"name":"period","desc":"","lua_type":"number"},{"name":"callback","desc":"","lua_type":"(T...) -> boolean?"},{"name":"...","desc":"","lua_type":"T..."}],"returns":[{"desc":"","lua_type":"thread"}],"function_type":"static","source":{"line":144,"path":"src/init.lua"}},{"name":"tick","desc":"Connects a callback to an event but will only fire the callback at the given frequency.\\n\\n```lua\\n-- Run this 3 times a second on Heartbeat\\nSandwich.tick(RunService.Heartbeat, 3, function(deltaTime)\\n\\tlocal result = expensiveCalculation(deltaTime)\\n\\texpensiveOperation(result)\\nend)\\n```","params":[{"name":"event","desc":"","lua_type":"{ Connect: (any, (T...) -> ()) -> { Disconnect: (any) -> ()? } }"},{"name":"frequency","desc":"","lua_type":"number"},{"name":"callback","desc":"","lua_type":"(T...) -> ()\\r\\n"}],"returns":[{"desc":"","lua_type":"Connection"}],"function_type":"static","source":{"line":166,"path":"src/init.lua"}}],"properties":[],"types":[],"name":"Sandwich","desc":"The simple task scheduler for Roblox.","source":{"line":33,"path":"src/init.lua"}}')}}]);