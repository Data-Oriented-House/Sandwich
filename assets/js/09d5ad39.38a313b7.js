"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=i,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},84381:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const a={},o="Examples",l={unversionedId:"examples",id:"examples",title:"Examples",description:"Basic Example",source:"@site/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/Sandwich/docs/examples",draft:!1,editUrl:"https://github.com/data-oriented-house/sandwich/edit/main/docs/examples.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/Sandwich/docs/intro"}},c={},s=[{value:"Basic Example",id:"basic-example",level:2},{value:"ECS Example",id:"ecs-example",level:2}],u={toc:s},d="wrapper";function p(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"examples"},"Examples"),(0,i.kt)("h2",{id:"basic-example"},"Basic Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local schedule = Sandwich.new()\n\nfunction schedule.before(job: Job, ...)\n    print("Before", job, ...)\nend\n\nfunction schedule.after(job: Job, ...)\n    print("After", job, ...)\nend\n\nlocal a = schedule.new(function(...)\n    print("a", ...)\nend)\n\nlocal b = schedule.new(function(...)\n    print("b", ...)\nend)\n\nlocal c = schedule.new(function(...)\n    print("c", ...)\nend, a, b)\n\nlocal d = schedule.new(function(...)\n    print("d", ...)\nend, b, c)\n\nlocal e = schedule.new(function(...)\n    print("e", ...)\nend, c)\n\nlocal f = schedule.new(function(...)\n    print("f", ...)\nend, a, c, e)\n\nschedule.start(\'1\', \'2\')\n')),(0,i.kt)("h2",{id:"ecs-example"},"ECS Example"),(0,i.kt)("p",null,"Let's use a fake ECS for example, since these are always fun to schedule because of their use of Systems."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local ECS = require(Some.Funny.ECS)\n\nlocal schedule = Sandwich.new {\n    before = function(job: Job, deltaTime: number)\n        print("Starting", job,  deltaTime)\n    end,\n}\n\nlocal function updateAccelerations(deltaTime: number, entities)\n    for entity in entities do\n        entity.acceleration = (entity.target - entity.position) * deltaTime\n    end\nend\n\nlocal function updateVelocities(deltaTime: number, entities)\n    for entity in entities do\n        entity.velocity += entity.acceleration * deltaTime\n    end\nend\n\nlocal function updatePositions(deltaTime: number, entities)\n    for entity in entities do\n        entity.position += entity.velocity * deltaTime\n    end\nend\n\nlocal accelerationSystem = schedule.new(function(deltaTime: number)\n    print("Updating Acceleration", deltaTime)\n    updateAccelerations(deltaTime, ECS.query("target", "position", "acceleration"))\nend)\n\nlocal velocitySystem = schedule.new(function(deltaTime: number)\n    print("Updating Velocity", deltaTime)\n    updateVelocities(deltaTime, ECS.query("velocity", "acceleration"))\nend, accelerationSystem)\n\nlocal positionSystem = schedule.new(function(deltaTime: number)\n    print("Updating Position", deltaTime)\n    updatePositions(deltaTime, ECS.query("position", "velocity"))\nend, velocitySystem)\n\nRunService.Heartbeat:Connect(schedule.start)\n')))}p.isMDXComponent=!0}}]);