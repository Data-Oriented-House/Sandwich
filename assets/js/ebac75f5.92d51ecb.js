"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[898],{30612:e=>{e.exports=JSON.parse('{"functions":[{"name":"Create","desc":"Creates a new stream with the given tasks in order.","params":[{"name":"Tasks","desc":"","lua_type":"{ Task }?"}],"returns":[{"desc":"","lua_type":"Stream"}],"function_type":"static","source":{"line":53,"path":"src/init.lua"}},{"name":"Clear","desc":"Removes all jobs from a stream.","params":[{"name":"Stream","desc":"","lua_type":"Stream"}],"returns":[],"function_type":"static","source":{"line":77,"path":"src/init.lua"}},{"name":"Replace","desc":"Replaces the task of a job.","params":[{"name":"Job","desc":"","lua_type":"Job"},{"name":"Task","desc":"","lua_type":"Task"}],"returns":[],"function_type":"static","source":{"line":93,"path":"src/init.lua"}},{"name":"Find","desc":"Finds the first job with the given task in a stream.","params":[{"name":"Stream","desc":"","lua_type":"Stream"},{"name":"Task","desc":"","lua_type":"Task"}],"returns":[{"desc":"","lua_type":"Job?"}],"function_type":"static","source":{"line":109,"path":"src/init.lua"}},{"name":"Insert.Start","desc":"Inserts a new job at the start of a stream.","params":[{"name":"Stream","desc":"","lua_type":"Stream"},{"name":"Task","desc":"","lua_type":"Task"}],"returns":[{"desc":"","lua_type":"Job"}],"function_type":"static","source":{"line":126,"path":"src/init.lua"}},{"name":"Insert.End","desc":"Inserts a new job at the end of a stream.","params":[{"name":"Stream","desc":"","lua_type":"Stream"},{"name":"Task","desc":"","lua_type":"Task"}],"returns":[{"desc":"","lua_type":"Job"}],"function_type":"static","source":{"line":146,"path":"src/init.lua"}},{"name":"Insert.Before","desc":"Inserts a new job before a pre-existing job.","params":[{"name":"Job","desc":"","lua_type":"Job"},{"name":"Task","desc":"","lua_type":"Task"}],"returns":[{"desc":"","lua_type":"Job"}],"function_type":"static","source":{"line":166,"path":"src/init.lua"}},{"name":"Insert.After","desc":"Inserts a new job after a pre-existing job.","params":[{"name":"Job","desc":"","lua_type":"Job"},{"name":"Task","desc":"","lua_type":"Task"}],"returns":[{"desc":"","lua_type":"Job"}],"function_type":"static","source":{"line":189,"path":"src/init.lua"}},{"name":"Remove","desc":"Removes a job from its stream and sets its stream to nil.","params":[{"name":"Job","desc":"","lua_type":"Job"}],"returns":[],"function_type":"static","source":{"line":210,"path":"src/init.lua"}},{"name":"Fire.Stream","desc":"Executes all jobs in a stream in order with the given arguments. If a job returns a non-nil value, the stream will stop executing.","params":[{"name":"Stream","desc":"","lua_type":"Stream"},{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"static","source":{"line":228,"path":"src/init.lua"}},{"name":"Fire.Streams","desc":"Executes all jobs in all streams in order with the given arguments. If a job returns a non-nil value, the stream will stop executing and it will move to the next stream.","params":[{"name":"Streams","desc":"","lua_type":"{ Stream }"},{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"static","source":{"line":242,"path":"src/init.lua"}},{"name":"Fire.Job","desc":"Executes an individual job with the given arguments.","params":[{"name":"Job","desc":"","lua_type":"Job"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"true?"}],"function_type":"static","source":{"line":257,"path":"src/init.lua"}},{"name":"Fire.Jobs","desc":"Executes a job and all jobs in its stream after in order with the given arguments. If a job returns a non-nil value, the jobs will stop executing.","params":[{"name":"Job","desc":"","lua_type":"Job"},{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"static","source":{"line":270,"path":"src/init.lua"}},{"name":"Interval","desc":"Creates a new thread that will execute a callback every given number of seconds. If the callback returns a non-nil value, the thread will stop executing.","params":[{"name":"Seconds","desc":"","lua_type":"number"},{"name":"Callback","desc":"","lua_type":"() -> true?"}],"returns":[{"desc":"","lua_type":"thread"}],"function_type":"static","source":{"line":288,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"Task","desc":"Executed by jobs.","lua_type":"(...any) -> true?","source":{"line":15,"path":"src/init.lua"}},{"name":"Job","desc":"Executes its tasks. If its stream is nil, it was removed from a stream and cannot be used again.","fields":[{"name":"Task","lua_type":"Task","desc":""},{"name":"Stream","lua_type":"Stream?","desc":""}],"source":{"line":25,"path":"src/init.lua"}},{"name":"Stream","desc":"An ordered list of jobs.","fields":[{"name":"Jobs","lua_type":"{ Job }","desc":""}],"source":{"line":37,"path":"src/init.lua"}}],"name":"Sandwich","desc":"The simple scheduler for Roblox.","source":{"line":8,"path":"src/init.lua"}}')}}]);